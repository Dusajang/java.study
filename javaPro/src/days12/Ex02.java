package days12;

/**
 * @author dkrkdfla
 * @date 2024. 7. 16.오전 11:14:26
 * @subject
 * @content
 *
 */
public class Ex02 {

	public static void main(String[] args) {
		/*
		 * 1.객체 지향적 프로그래밍
		 *   Object Oriented Programming
		 *   OOP
		 *   =object+object+object  (객체)...
		 *   
		 * 2. 클래스 = 객체(object) 설계도 
		 * 3. 객체 = 클래스로 실제 존재하는 것.
		 * 				유형 또는 무형(개념)
		 * 			=속성 + 동작(기능)
		 * 4. 인스턴스(Instance) = 생성된 객체
		 * 5. 인스턴스화 : 클래스 ->객체를 생성하는 과정
		 * 
		 * 6. 클래스를 설계하는 과정
		 * 		1) 객체의 구성요소 (속성, 기능)파악 - 목록 작성.
		 * 		2) 클래스 선언
		 * 		3) 객체 생성 -
		 * 		4) 테스트
		 * 		5) 문제점 발생 - 유지, 보수
		 * 		6) 상용화 -배포
		 * 		7) 버전 관리 - 기능 추가, 보수(보안)
		 * 
		 * 7. OOP의 특징 == 클래스의 특징
		 * 		1) 캡슐화
		 * 		2) 상속성
		 * 		3) 다형성
		 * 		4) 은닉화
		 * 		5) 추상화
		 * 
		 * 8. 객체(클래스) 관계
		 * 		1) 집합 관계		has-a 관계
		 * 		2) 사용 관계		
		 * 		3) 상속 관계		is-a 관계
		 * 
		 * 예) 망치
		 * 		설계도 ==클래스
		 * 		기능(용도) :못 질 ,못 빼기
		 * 		속성(특징) : 고무, 나무...크기
		 * 
		 * 9. 클래스 선언 형식
		 * 		[접근지정자][기타제어자] class 클래스명
		 * 		[extends Super 클래스]
		 * 		[implements 인터페이스...]
		 * {
		 * 			클래스의 구성요소(멤버)
		 * 			1) 속성 == 특징 == property			멤버변수(필드 field)
		 * 			2) 기능 == 동작(일) == function		멤버함수(메서드 method)
		 * }
		 * 
		 * 
		 */

	}//main

}//class






